{"ast":null,"code":"import axios from 'axios';\nexport const GET_GAMES = 'GET_GAMES';\nexport const GET_GAME = 'GET_GAME';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const SEARCH_GAME = 'SEARCH_GAME';\nexport const RESET_GAME = 'RESET_GAME';\nexport const GET_GENRES = 'GET_GENRES';\nexport const ADD_GAME = 'ADD_GAME';\nexport const ORDER_NAMES = 'ORDER_NAMES';\nexport const FILTER_GENRES = 'FILTER_GENRES';\nexport const ORDER_RATINGS = 'ORDER_RATINGS';\nexport const FILTER_ORIGIN = 'FILTER_ORIGIN';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const getGames = () => async dispatch => {\n  try {\n    const response = await axios.get('http://localhost:3001/videogames');\n    dispatch({\n      type: GET_GAMES,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.message\n    });\n  }\n};\nexport const searchGame = name => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:3001/videogames/?name=${name}`);\n    dispatch({\n      type: SEARCH_GAME,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.message\n    });\n  }\n};\nexport const getGame = id => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:3001/videogame/${id}`);\n    dispatch({\n      type: GET_GAME,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error\n    });\n  }\n};\nexport const getGenres = () => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:3001/genres/get`);\n    dispatch({\n      type: GET_GENRES,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error\n    });\n  }\n};\nexport const addGame = gameData => async dispatch => {\n  try {\n    const response = await axios.post('http://localhost:3001/videogames/', gameData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: ADD_GAME,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error\n    });\n  }\n};\nexport const resetGame = () => ({\n  type: RESET_GAME,\n  payload: {}\n});\nexport const orderNames = name => ({\n  type: ORDER_NAMES,\n  payload: name\n});\nexport const orderRating = rating => ({\n  type: ORDER_RATINGS,\n  payload: rating\n});\nexport const filterByGenres = genre => ({\n  type: FILTER_GENRES,\n  payload: genre\n});\nexport const filterByOrigin = origin => ({\n  type: FILTER_ORIGIN,\n  payload: origin\n});\nexport const setCurrentPage = page => {\n  return {\n    type: SET_CURRENT_PAGE,\n    payload: page\n  };\n};","map":{"version":3,"names":["axios","GET_GAMES","GET_GAME","GET_ERRORS","SEARCH_GAME","RESET_GAME","GET_GENRES","ADD_GAME","ORDER_NAMES","FILTER_GENRES","ORDER_RATINGS","FILTER_ORIGIN","SET_CURRENT_PAGE","getGames","dispatch","response","get","type","payload","data","error","message","searchGame","name","getGame","id","getGenres","addGame","gameData","post","headers","resetGame","orderNames","orderRating","rating","filterByGenres","genre","filterByOrigin","origin","setCurrentPage","page"],"sources":["C:/proyecto-individual/client/src/redux/actions/actions.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport const GET_GAMES = 'GET_GAMES'\r\nexport const GET_GAME = 'GET_GAME'\r\nexport const GET_ERRORS = 'GET_ERRORS'\r\nexport const SEARCH_GAME = 'SEARCH_GAME'\r\nexport const RESET_GAME = 'RESET_GAME'\r\nexport const GET_GENRES = 'GET_GENRES'\r\nexport const ADD_GAME = 'ADD_GAME'\r\nexport const ORDER_NAMES = 'ORDER_NAMES'\r\nexport const FILTER_GENRES = 'FILTER_GENRES'\r\nexport const ORDER_RATINGS = 'ORDER_RATINGS'\r\nexport const FILTER_ORIGIN = 'FILTER_ORIGIN'\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\n\r\nexport const getGames = () => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get('http://localhost:3001/videogames')\r\n    dispatch({\r\n      type: GET_GAMES,\r\n      payload: response.data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchGame = (name) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://localhost:3001/videogames/?name=${name}`\r\n    )\r\n    dispatch({\r\n      type: SEARCH_GAME,\r\n      payload: response.data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getGame = (id) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get(`http://localhost:3001/videogame/${id}`)\r\n    dispatch({\r\n      type: GET_GAME,\r\n      payload: response.data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getGenres = () => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get(`http://localhost:3001/genres/get`)\r\n    dispatch({\r\n      type: GET_GENRES,\r\n      payload: response.data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\n\r\nexport const addGame = (gameData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(\r\n      'http://localhost:3001/videogames/',\r\n      gameData,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    dispatch({\r\n      type: ADD_GAME,\r\n      payload: response.data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\n\r\nexport const resetGame = () => ({\r\n  type: RESET_GAME,\r\n  payload: {},\r\n})\r\n\r\nexport const orderNames = (name) => ({\r\n  type: ORDER_NAMES,\r\n  payload: name,\r\n})\r\n\r\nexport const orderRating = (rating) => ({\r\n  type: ORDER_RATINGS,\r\n  payload: rating,\r\n})\r\n\r\nexport const filterByGenres = (genre) => ({\r\n  type: FILTER_GENRES,\r\n  payload: genre,\r\n})\r\n\r\nexport const filterByOrigin = (origin) => ({\r\n  type: FILTER_ORIGIN,\r\n  payload: origin,\r\n})\r\n\r\nexport const setCurrentPage = (page) => {\r\n  return {\r\n    type: SET_CURRENT_PAGE,\r\n    payload: page,\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ADD_GAME, FILTER_GENRES, FILTER_ORIGIN, GET_ERRORS, GET_GAME, GET_GAMES, GET_GENRES, ORDER_NAMES, ORDER_RATINGS, RESET_GAME, SEARCH_GAME, SET_CURRENT_PAGE } from '../actions/actions';\nconst initialState = {\n  game: {},\n  error: null,\n  games: [],\n  filtredGames: [],\n  genres: [],\n  searched: [],\n  addedgame: {},\n  currentPage: 1\n};\nexport default function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_GAMES:\n      return {\n        ...state,\n        games: action.payload,\n        filtredGames: action.payload\n      };\n    case SEARCH_GAME:\n      return {\n        ...state,\n        searched: action.payload\n      };\n    case GET_GAME:\n      return {\n        ...state,\n        game: action.payload\n      };\n    case ADD_GAME:\n      return {\n        ...state,\n        addedgame: action.payload\n      };\n    case RESET_GAME:\n      return {\n        ...state,\n        game: {}\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload\n      };\n    case GET_ERRORS:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case ORDER_NAMES:\n      const copyNames = [...state.filtredGames];\n      let orderedNames;\n      if (action.payload === 'Ascendent') {\n        orderedNames = copyNames.sort((a, b) => {\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n          return 0;\n        });\n      } else if (action.payload === 'Descendent') {\n        orderedNames = copyNames.sort((a, b) => {\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;\n          return 0;\n        });\n      } else if (action.payload === 'Default') {\n        orderedNames = [...state.games];\n      }\n      return {\n        ...state,\n        filtredGames: orderedNames,\n        currentPage: 1\n      };\n    case ORDER_RATINGS:\n      const copyRating = [...state.filtredGames];\n      let orderedRating;\n      if (action.payload === 'Ascendent') {\n        orderedRating = copyRating.sort((a, b) => a.rating - b.rating);\n      } else if (action.payload === 'Descendent') {\n        orderedRating = copyRating.sort((a, b) => b.rating - a.rating);\n      } else if (action.payload === 'Default') {\n        orderedRating = [...state.games];\n      }\n      return {\n        ...state,\n        filtredGames: orderedRating,\n        currentPage: 1\n      };\n    case FILTER_GENRES:\n      const copyGenres = [...state.games];\n      let genresFilter = copyGenres;\n      if (action.payload !== 'Default') {\n        genresFilter = genresFilter.filter(g => g.genres.some(genre => genre.name === action.payload));\n      }\n      const copyGenresAbc = [...genresFilter];\n      let orderedGenres = copyGenresAbc.sort((a, b) => {\n        if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        filtredGames: orderedGenres,\n        currentPage: 1\n      };\n    case FILTER_ORIGIN:\n      const copyOrigins = [...state.games];\n      let originFilter = copyOrigins;\n      if (action.payload === 'Api') {\n        // Filtra los juegos que tienen números\n        originFilter = originFilter.filter(game => /^\\d+$/.test(game.id));\n      } else if (action.payload === 'Created') {\n        // Filtra los juegos que tienen guiones\n        originFilter = originFilter.filter(game => isNaN(game.id));\n      }\n      const copyfilterAbc = [...originFilter];\n      let orderedOrigin = copyfilterAbc.sort((a, b) => {\n        if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        filtredGames: orderedOrigin,\n        currentPage: 1\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["ADD_GAME","FILTER_GENRES","FILTER_ORIGIN","GET_ERRORS","GET_GAME","GET_GAMES","GET_GENRES","ORDER_NAMES","ORDER_RATINGS","RESET_GAME","SEARCH_GAME","SET_CURRENT_PAGE","initialState","game","error","games","filtredGames","genres","searched","addedgame","currentPage","rootReducer","state","action","type","payload","copyNames","orderedNames","sort","a","b","name","toLowerCase","copyRating","orderedRating","rating","copyGenres","genresFilter","filter","g","some","genre","copyGenresAbc","orderedGenres","copyOrigins","originFilter","test","id","isNaN","copyfilterAbc","orderedOrigin"],"sources":["C:/proyecto-individual/client/src/redux/reducer/reducer.js"],"sourcesContent":["import {\r\n  ADD_GAME,\r\n  FILTER_GENRES,\r\n  FILTER_ORIGIN,\r\n  GET_ERRORS,\r\n  GET_GAME,\r\n  GET_GAMES,\r\n  GET_GENRES,\r\n  ORDER_NAMES,\r\n  ORDER_RATINGS,\r\n  RESET_GAME,\r\n  SEARCH_GAME,\r\n  SET_CURRENT_PAGE,\r\n} from '../actions/actions'\r\n\r\nconst initialState = {\r\n  game: {},\r\n  error: null,\r\n  games: [],\r\n  filtredGames: [],\r\n  genres: [],\r\n  searched: [],\r\n  addedgame: {},\r\n  currentPage: 1,\r\n}\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_GAMES:\r\n      return {\r\n        ...state,\r\n        games: action.payload,\r\n        filtredGames: action.payload,\r\n      }\r\n    case SEARCH_GAME:\r\n      return {\r\n        ...state,\r\n        searched: action.payload,\r\n      }\r\n    case GET_GAME:\r\n      return {\r\n        ...state,\r\n        game: action.payload,\r\n      }\r\n    case ADD_GAME:\r\n      return {\r\n        ...state,\r\n        addedgame: action.payload,\r\n      }\r\n    case RESET_GAME:\r\n      return {\r\n        ...state,\r\n        game: {},\r\n      }\r\n    case GET_GENRES:\r\n      return {\r\n        ...state,\r\n        genres: action.payload,\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload,\r\n      }\r\n    case GET_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_NAMES:\r\n      const copyNames = [...state.filtredGames]\r\n      let orderedNames\r\n      if (action.payload === 'Ascendent') {\r\n        orderedNames = copyNames.sort((a, b) => {\r\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return -1\r\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return 1\r\n          return 0\r\n        })\r\n      } else if (action.payload === 'Descendent') {\r\n        orderedNames = copyNames.sort((a, b) => {\r\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return -1\r\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return 1\r\n          return 0\r\n        })\r\n      } else if (action.payload === 'Default') {\r\n        orderedNames = [...state.games]\r\n      }\r\n      return { ...state, filtredGames: orderedNames, currentPage: 1 }\r\n\r\n    case ORDER_RATINGS:\r\n      const copyRating = [...state.filtredGames]\r\n      let orderedRating\r\n      if (action.payload === 'Ascendent') {\r\n        orderedRating = copyRating.sort((a, b) => a.rating - b.rating)\r\n      } else if (action.payload === 'Descendent') {\r\n        orderedRating = copyRating.sort((a, b) => b.rating - a.rating)\r\n      } else if (action.payload === 'Default') {\r\n        orderedRating = [...state.games]\r\n      }\r\n      return { ...state, filtredGames: orderedRating, currentPage: 1 }\r\n\r\n    case FILTER_GENRES:\r\n      const copyGenres = [...state.games]\r\n      let genresFilter = copyGenres\r\n      if (action.payload !== 'Default') {\r\n        genresFilter = genresFilter.filter((g) =>\r\n          g.genres.some((genre) => genre.name === action.payload)\r\n        )\r\n      }\r\n      const copyGenresAbc = [...genresFilter]\r\n      let orderedGenres = copyGenresAbc.sort((a, b) => {\r\n        if (a.name.toLowerCase() < b.name.toLowerCase()) return -1\r\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1\r\n        return 0\r\n      })\r\n      return { ...state, filtredGames: orderedGenres, currentPage: 1 }\r\n\r\n    case FILTER_ORIGIN:\r\n      const copyOrigins = [...state.games]\r\n      let originFilter = copyOrigins\r\n      if (action.payload === 'Api') {\r\n        // Filtra los juegos que tienen números\r\n        originFilter = originFilter.filter((game) => /^\\d+$/.test(game.id))\r\n      } else if (action.payload === 'Created') {\r\n        // Filtra los juegos que tienen guiones\r\n        originFilter = originFilter.filter((game) => isNaN(game.id))\r\n      }\r\n      const copyfilterAbc = [...originFilter]\r\n      let orderedOrigin = copyfilterAbc.sort((a, b) => {\r\n        if (a.name.toLowerCase() < b.name.toLowerCase()) return -1\r\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1\r\n        return 0\r\n      })\r\n      return { ...state, filtredGames: orderedOrigin, currentPage: 1 }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}